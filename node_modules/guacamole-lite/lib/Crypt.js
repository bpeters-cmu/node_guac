const Crypto = require('crypto');

class Crypt {

    constructor(app) {
        this.server = app;
    }

    decrypt(encodedString) {
	console.log(this.constructor.base64decode(encodedString));
        let temp = this.constructor.base64decode(encodedString);
        if(temp.includes("^")){
	temp = temp.slice(0, -6);
	}
	console.log(temp); 
	let encoded = JSON.parse(temp);

	console.log(encoded);
        //encoded.iv = this.constructor.base64decode(encoded.iv);
        //encoded.value = this.constructor.base64decode(encoded.value, 'binary');

        //const decipher = Crypto.createDecipheriv(this.server.clientOptions.crypt.cypher, this.server.clientOptions.crypt.key, encoded.iv);

        //let decrypted = decipher.update(encoded.value, 'binary', 'ascii');
        //decrypted += decipher.final('ascii');

        return encoded;
    }

    static base64decode(string, mode) {
        return Buffer.from(string, 'base64').toString(mode || 'ascii');
    }

}

module.exports = Crypt;
